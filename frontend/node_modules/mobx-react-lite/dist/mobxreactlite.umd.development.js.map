{"version":3,"file":"mobxreactlite.umd.development.js","sources":["../src/assertEnvironment.ts","../src/utils.ts","../src/observerBatching.ts","../src/staticRendering.ts","../src/printDebugValue.ts","../src/reactionCleanupTracking.ts","../src/useQueuedForceUpdate.ts","../src/useObserver.ts","../src/observer.ts","../src/ObserverComponent.ts","../src/useAsObservableSource.ts","../src/useLocalStore.ts","../src/index.ts"],"sourcesContent":["import { spy } from \"mobx\"\nimport { useState } from \"react\"\n\nif (!useState) {\n    throw new Error(\"mobx-react-lite requires React with Hooks support\")\n}\nif (!spy) {\n    throw new Error(\"mobx-react-lite requires mobx at least version 4 to be available\")\n}\n","import { useCallback, useEffect, useState } from \"react\"\n\nconst EMPTY_ARRAY: any[] = []\n\nexport function useUnmount(fn: () => void) {\n    useEffect(() => fn, EMPTY_ARRAY)\n}\n\nexport function useForceUpdate() {\n    const [, setTick] = useState(0)\n\n    const update = useCallback(() => {\n        setTick(tick => tick + 1)\n    }, [])\n\n    return update\n}\n\nexport function isPlainObject(value: any): value is object {\n    if (!value || typeof value !== \"object\") {\n        return false\n    }\n    const proto = Object.getPrototypeOf(value)\n    return !proto || proto === Object.prototype\n}\n\nexport function getSymbol(name: string): symbol | string {\n    if (typeof Symbol === \"function\") {\n        return Symbol.for(name)\n    }\n    return `__$mobx-react ${name}__`\n}\n\ndeclare const window: any\ndeclare const self: any\n\nconst mockGlobal = {}\n\nexport function getGlobal() {\n    if (typeof window !== \"undefined\") {\n        return window\n    }\n    if (typeof global !== \"undefined\") {\n        return global\n    }\n    if (typeof self !== \"undefined\") {\n        return self\n    }\n    return mockGlobal\n}\n","import { configure } from \"mobx\"\nimport { getGlobal, getSymbol } from \"./utils\"\n\nconst observerBatchingConfiguredSymbol = getSymbol(\"observerBatching\")\n\nexport function defaultNoopBatch(callback: () => void) {\n    callback()\n}\n\nexport function observerBatching(reactionScheduler: any) {\n    if (!reactionScheduler) {\n        reactionScheduler = defaultNoopBatch\n        if (\"production\" !== process.env.NODE_ENV) {\n            console.warn(\n                \"[MobX] Failed to get unstable_batched updates from react-dom / react-native\"\n            )\n        }\n    }\n    configure({ reactionScheduler })\n    getGlobal()[observerBatchingConfiguredSymbol] = true\n}\n\nexport const isObserverBatched = () => !!getGlobal()[observerBatchingConfiguredSymbol]\n","let globalIsUsingStaticRendering = false\n\nexport function useStaticRendering(enable: boolean) {\n    globalIsUsingStaticRendering = enable\n}\n\nexport function isUsingStaticRendering(): boolean {\n    return globalIsUsingStaticRendering\n}\n","import { getDependencyTree, Reaction } from \"mobx\"\n\nexport function printDebugValue(v: Reaction) {\n    return getDependencyTree(v)\n}\n","import { Reaction } from \"mobx\"\n\nexport interface IReactionTracking {\n    /** The Reaction created during first render, which may be leaked */\n    reaction: Reaction\n    /**\n     * The time (in ticks) at which point we should dispose of the reaction\n     * if this component hasn't yet been fully mounted.\n     */\n    cleanAt: number\n\n    /**\n     * Whether the component has yet completed mounting (for us, whether\n     * its useEffect has run)\n     */\n    mounted?: boolean\n\n    /**\n     * Whether the observables that the component is tracking changed between\n     * the first render and the first useEffect.\n     */\n    changedBeforeMount?: boolean\n}\n\nexport function createTrackingData(reaction: Reaction) {\n    const trackingData: IReactionTracking = {\n        cleanAt: Date.now() + CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS,\n        reaction\n    }\n    return trackingData\n}\n\n/**\n * The minimum time before we'll clean up a Reaction created in a render\n * for a component that hasn't managed to run its effects. This needs to\n * be big enough to ensure that a component won't turn up and have its\n * effects run without being re-rendered.\n */\nexport const CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS = 10_000\n\n/**\n * The frequency with which we'll check for leaked reactions.\n */\nexport const CLEANUP_TIMER_LOOP_MILLIS = 10_000\n\n/**\n * Reactions created by components that have yet to be fully mounted.\n */\nconst uncommittedReactionRefs: Set<React.MutableRefObject<IReactionTracking | null>> = new Set()\n\n/**\n * Latest 'uncommitted reactions' cleanup timer handle.\n */\nlet reactionCleanupHandle: ReturnType<typeof setTimeout> | undefined\n\nfunction ensureCleanupTimerRunning() {\n    if (reactionCleanupHandle === undefined) {\n        reactionCleanupHandle = setTimeout(cleanUncommittedReactions, CLEANUP_TIMER_LOOP_MILLIS)\n    }\n}\n\nexport function scheduleCleanupOfReactionIfLeaked(\n    ref: React.MutableRefObject<IReactionTracking | null>\n) {\n    uncommittedReactionRefs.add(ref)\n\n    ensureCleanupTimerRunning()\n}\n\nexport function recordReactionAsCommitted(\n    reactionRef: React.MutableRefObject<IReactionTracking | null>\n) {\n    uncommittedReactionRefs.delete(reactionRef)\n}\n\n/**\n * Run by the cleanup timer to dispose any outstanding reactions\n */\nfunction cleanUncommittedReactions() {\n    reactionCleanupHandle = undefined\n\n    // Loop through all the candidate leaked reactions; those older\n    // than CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS get tidied.\n\n    const now = Date.now()\n    uncommittedReactionRefs.forEach(ref => {\n        const tracking = ref.current\n        if (tracking) {\n            if (now >= tracking.cleanAt) {\n                // It's time to tidy up this leaked reaction.\n                tracking.reaction.dispose()\n                ref.current = null\n                uncommittedReactionRefs.delete(ref)\n            }\n        }\n    })\n\n    if (uncommittedReactionRefs.size > 0) {\n        // We've just finished a round of cleanups but there are still\n        // some leak candidates outstanding.\n        ensureCleanupTimerRunning()\n    }\n}\n\n/* istanbul ignore next */\n/**\n * Only to be used by test functions; do not export outside of mobx-react-lite\n */\nexport function forceCleanupTimerToRunNowForTests() {\n    // This allows us to control the execution of the cleanup timer\n    // to force it to run at awkward times in unit tests.\n    if (reactionCleanupHandle) {\n        clearTimeout(reactionCleanupHandle)\n        cleanUncommittedReactions()\n    }\n}\n\n/* istanbul ignore next */\nexport function resetCleanupScheduleForTests() {\n    if (reactionCleanupHandle) {\n        clearTimeout(reactionCleanupHandle)\n        reactionCleanupHandle = undefined\n    }\n    uncommittedReactionRefs.clear()\n}\n","import React from \"react\"\n\nexport type ForceUpdate = () => void\n\nlet insideRender: boolean = false\nlet forceUpdateQueue: ForceUpdate[] = []\n\nexport function useQueuedForceUpdate(forceUpdate: ForceUpdate): ForceUpdate {\n    return () => {\n        if (insideRender) {\n            forceUpdateQueue.push(forceUpdate)\n        } else {\n            forceUpdate()\n        }\n    }\n}\n\nexport function useQueuedForceUpdateBlock<T>(callback: () => T) {\n    // start intercepting force-update calls\n    insideRender = true\n    forceUpdateQueue = []\n    try {\n        const result = callback()\n\n        // stop intercepting force-update\n        insideRender = false\n        // store queue or nothing if it was empty to execute useLayoutEffect only when necessary\n        const queue = forceUpdateQueue.length > 0 ? forceUpdateQueue : undefined\n\n        // run force-update queue in useLayoutEffect\n        React.useLayoutEffect(() => {\n            if (queue) {\n                queue.forEach(x => x())\n            }\n        }, [queue])\n\n        return result\n    } finally {\n        insideRender = false\n    }\n}\n","import { Reaction } from \"mobx\"\nimport React from \"react\"\n\nimport { printDebugValue } from \"./printDebugValue\"\nimport {\n    createTrackingData,\n    IReactionTracking,\n    recordReactionAsCommitted,\n    scheduleCleanupOfReactionIfLeaked\n} from \"./reactionCleanupTracking\"\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useForceUpdate } from \"./utils\"\nimport { useQueuedForceUpdate, useQueuedForceUpdateBlock } from \"./useQueuedForceUpdate\"\n\nexport type ForceUpdateHook = () => () => void\n\nexport interface IUseObserverOptions {\n    useForceUpdate?: ForceUpdateHook\n}\n\nconst EMPTY_OBJECT = {}\n\nfunction observerComponentNameFor(baseComponentName: string) {\n    return `observer${baseComponentName}`\n}\n\nexport function useObserver<T>(\n    fn: () => T,\n    baseComponentName: string = \"observed\",\n    options: IUseObserverOptions = EMPTY_OBJECT\n): T {\n    if (isUsingStaticRendering()) {\n        return fn()\n    }\n\n    const wantedForceUpdateHook = options.useForceUpdate || useForceUpdate\n    const forceUpdate = wantedForceUpdateHook()\n    const queuedForceUpdate = useQueuedForceUpdate(forceUpdate)\n\n    // StrictMode/ConcurrentMode/Suspense may mean that our component is\n    // rendered and abandoned multiple times, so we need to track leaked\n    // Reactions.\n    const reactionTrackingRef = React.useRef<IReactionTracking | null>(null)\n\n    if (!reactionTrackingRef.current) {\n        // First render for this component (or first time since a previous\n        // reaction from an abandoned render was disposed).\n\n        const newReaction = new Reaction(observerComponentNameFor(baseComponentName), () => {\n            // Observable has changed, meaning we want to re-render\n            // BUT if we're a component that hasn't yet got to the useEffect()\n            // stage, we might be a component that _started_ to render, but\n            // got dropped, and we don't want to make state changes then.\n            // (It triggers warnings in StrictMode, for a start.)\n            if (trackingData.mounted) {\n                // We have reached useEffect(), so we're mounted, and can trigger an update\n                queuedForceUpdate()\n            } else {\n                // We haven't yet reached useEffect(), so we'll need to trigger a re-render\n                // when (and if) useEffect() arrives.  The easiest way to do that is just to\n                // drop our current reaction and allow useEffect() to recreate it.\n                newReaction.dispose()\n                reactionTrackingRef.current = null\n            }\n        })\n\n        const trackingData = createTrackingData(newReaction)\n        reactionTrackingRef.current = trackingData\n        scheduleCleanupOfReactionIfLeaked(reactionTrackingRef)\n    }\n\n    const { reaction } = reactionTrackingRef.current!\n    React.useDebugValue(reaction, printDebugValue)\n\n    React.useEffect(() => {\n        // Called on first mount only\n        recordReactionAsCommitted(reactionTrackingRef)\n\n        if (reactionTrackingRef.current) {\n            // Great. We've already got our reaction from our render;\n            // all we need to do is to record that it's now mounted,\n            // to allow future observable changes to trigger re-renders\n            reactionTrackingRef.current.mounted = true\n        } else {\n            // The reaction we set up in our render has been disposed.\n            // This is either due to bad timings of renderings, e.g. our\n            // component was paused for a _very_ long time, and our\n            // reaction got cleaned up, or we got a observable change\n            // between render and useEffect\n\n            // Re-create the reaction\n            reactionTrackingRef.current = {\n                reaction: new Reaction(observerComponentNameFor(baseComponentName), () => {\n                    // We've definitely already been mounted at this point\n                    queuedForceUpdate()\n                }),\n                cleanAt: Infinity\n            }\n            queuedForceUpdate()\n        }\n\n        return () => {\n            reactionTrackingRef.current!.reaction.dispose()\n            reactionTrackingRef.current = null\n        }\n    }, [])\n\n    // delay all force-update calls after rendering of this component\n    return useQueuedForceUpdateBlock(() => {\n        // render the original component, but have the\n        // reaction track the observables, so that rendering\n        // can be invalidated (see above) once a dependency changes\n        let rendering!: T\n        let exception\n        reaction.track(() => {\n            try {\n                rendering = fn()\n            } catch (e) {\n                exception = e\n            }\n        })\n\n        if (exception) {\n            throw exception // re-throw any exceptions caught during rendering\n        }\n\n        return rendering\n    })\n}\n","import { forwardRef, memo } from \"react\"\n\nimport { isUsingStaticRendering } from \"./staticRendering\"\nimport { useObserver } from \"./useObserver\"\n\nexport interface IObserverOptions {\n    readonly forwardRef?: boolean\n}\n\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.RefForwardingComponent<TRef, P>,\n    options: IObserverOptions & { forwardRef: true }\n): React.MemoExoticComponent<\n    React.ForwardRefExoticComponent<React.PropsWithoutRef<P> & React.RefAttributes<TRef>>\n>\n\nexport function observer<P extends object>(\n    baseComponent: React.FunctionComponent<P>,\n    options?: IObserverOptions\n): React.FunctionComponent<P>\n\nexport function observer<\n    C extends React.FunctionComponent<any> | React.RefForwardingComponent<any>,\n    Options extends IObserverOptions\n>(\n    baseComponent: C,\n    options?: Options\n): Options extends { forwardRef: true }\n    ? C extends React.RefForwardingComponent<infer TRef, infer P>\n        ? C &\n              React.MemoExoticComponent<\n                  React.ForwardRefExoticComponent<\n                      React.PropsWithoutRef<P> & React.RefAttributes<TRef>\n                  >\n              >\n        : never /* forwardRef set for a non forwarding component */\n    : C & { displayName: string }\n\n// n.b. base case is not used for actual typings or exported in the typing files\nexport function observer<P extends object, TRef = {}>(\n    baseComponent: React.RefForwardingComponent<TRef, P>,\n    options?: IObserverOptions\n) {\n    // The working of observer is explained step by step in this talk: https://www.youtube.com/watch?v=cPF4iBedoF0&feature=youtu.be&t=1307\n    if (isUsingStaticRendering()) {\n        return baseComponent\n    }\n\n    const realOptions = {\n        forwardRef: false,\n        ...options\n    }\n\n    const baseComponentName = baseComponent.displayName || baseComponent.name\n\n    const wrappedComponent = (props: P, ref: React.Ref<TRef>) => {\n        return useObserver(() => baseComponent(props, ref), baseComponentName)\n    }\n    wrappedComponent.displayName = baseComponentName\n\n    // memo; we are not interested in deep updates\n    // in props; we assume that if deep objects are changed,\n    // this is in observables, which would have been tracked anyway\n    let memoComponent\n    if (realOptions.forwardRef) {\n        // we have to use forwardRef here because:\n        // 1. it cannot go before memo, only after it\n        // 2. forwardRef converts the function into an actual component, so we can't let the baseComponent do it\n        //    since it wouldn't be a callable function anymore\n        memoComponent = memo(forwardRef(wrappedComponent))\n    } else {\n        memoComponent = memo(wrappedComponent)\n    }\n\n    copyStaticProperties(baseComponent, memoComponent)\n    memoComponent.displayName = baseComponentName\n\n    return memoComponent\n}\n\n// based on https://github.com/mridgway/hoist-non-react-statics/blob/master/src/index.js\nconst hoistBlackList: any = {\n    $$typeof: true,\n    render: true,\n    compare: true,\n    type: true\n}\n\nfunction copyStaticProperties(base: any, target: any) {\n    Object.keys(base).forEach(key => {\n        if (!hoistBlackList[key]) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(base, key)!)\n        }\n    })\n}\n","import { useObserver } from \"./useObserver\"\n\ninterface IObserverProps {\n    children?(): React.ReactElement | null\n    render?(): React.ReactElement | null\n}\n\nfunction ObserverComponent({ children, render }: IObserverProps) {\n    const component = children || render\n    if (typeof component !== \"function\") {\n        return null\n    }\n    return useObserver(component)\n}\nObserverComponent.propTypes = {\n    children: ObserverPropsCheck,\n    render: ObserverPropsCheck\n}\nObserverComponent.displayName = \"Observer\"\n\nexport { ObserverComponent as Observer }\n\nfunction ObserverPropsCheck(\n    props: { [k: string]: any },\n    key: string,\n    componentName: string,\n    location: any,\n    propFullName: string\n) {\n    const extraKey = key === \"children\" ? \"render\" : \"children\"\n    const hasProp = typeof props[key] === \"function\"\n    const hasExtraProp = typeof props[extraKey] === \"function\"\n    if (hasProp && hasExtraProp) {\n        return new Error(\n            \"MobX Observer: Do not use children and render in the same time in`\" + componentName\n        )\n    }\n\n    if (hasProp || hasExtraProp) {\n        return null\n    }\n    return new Error(\n        \"Invalid prop `\" +\n            propFullName +\n            \"` of type `\" +\n            typeof props[key] +\n            \"` supplied to\" +\n            \" `\" +\n            componentName +\n            \"`, expected `function`.\"\n    )\n}\n","import { observable, runInAction } from \"mobx\"\nimport React from \"react\"\n\nimport { isPlainObject } from \"./utils\"\n\nexport function useAsObservableSourceInternal<TSource>(\n    current: TSource,\n    usedByLocalStore: boolean\n): TSource {\n    const culprit = usedByLocalStore ? \"useLocalStore\" : \"useAsObservableSource\"\n    if (\"production\" !== process.env.NODE_ENV && usedByLocalStore) {\n        const [initialSource] = React.useState(current)\n        if (\n            (initialSource !== undefined && current === undefined) ||\n            (initialSource === undefined && current !== undefined)\n        ) {\n            throw new Error(`make sure you never pass \\`undefined\\` to ${culprit}`)\n        }\n    }\n    if (usedByLocalStore && current === undefined) {\n        return undefined as any\n    }\n    if (\"production\" !== process.env.NODE_ENV && !isPlainObject(current)) {\n        throw new Error(\n            `${culprit} expects a plain object as ${usedByLocalStore ? \"second\" : \"first\"} argument`\n        )\n    }\n\n    const [res] = React.useState(() => observable(current, {}, { deep: false }))\n    if (\n        \"production\" !== process.env.NODE_ENV &&\n        Object.keys(res).length !== Object.keys(current).length\n    ) {\n        throw new Error(`the shape of objects passed to ${culprit} should be stable`)\n    }\n    runInAction(() => {\n        Object.assign(res, current)\n    })\n    return res\n}\n\nexport function useAsObservableSource<TSource>(current: TSource): TSource {\n    return useAsObservableSourceInternal(current, false)\n}\n","import { observable, runInAction, transaction } from \"mobx\"\nimport React from \"react\"\n\nimport { useAsObservableSourceInternal } from \"./useAsObservableSource\"\nimport { isPlainObject } from \"./utils\"\n\nexport function useLocalStore<TStore extends Record<string, any>>(initializer: () => TStore): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source: TSource) => TStore,\n    current: TSource\n): TStore\nexport function useLocalStore<TStore extends Record<string, any>, TSource extends object>(\n    initializer: (source?: TSource) => TStore,\n    current?: TSource\n): TStore {\n    const source = useAsObservableSourceInternal(current, true)\n\n    return React.useState(() => {\n        const local = observable(initializer(source))\n        if (isPlainObject(local)) {\n            runInAction(() => {\n                Object.keys(local).forEach(key => {\n                    const value = local[key]\n                    if (typeof value === \"function\") {\n                        // @ts-ignore No idea why ts2536 is popping out here\n                        local[key] = wrapInTransaction(value, local)\n                    }\n                })\n            })\n        }\n        return local\n    })[0]\n}\n\n// tslint:disable-next-line: ban-types\nfunction wrapInTransaction(fn: Function, context: object) {\n    return (...args: unknown[]) => {\n        return transaction(() => fn.apply(context, args))\n    }\n}\n","import \"./assertEnvironment\"\n\nimport { unstable_batchedUpdates as batch } from \"./utils/reactBatchedUpdates\"\nimport { observerBatching } from \"./observerBatching\"\n\nobserverBatching(batch)\n\nexport { isUsingStaticRendering, useStaticRendering } from \"./staticRendering\"\nexport { observer, IObserverOptions } from \"./observer\"\nexport { useObserver, ForceUpdateHook, IUseObserverOptions } from \"./useObserver\"\nexport { Observer } from \"./ObserverComponent\"\nexport { useForceUpdate } from \"./utils\"\nexport { useAsObservableSource } from \"./useAsObservableSource\"\nexport { useLocalStore } from \"./useLocalStore\"\nexport { useQueuedForceUpdate, useQueuedForceUpdateBlock } from \"./useQueuedForceUpdate\"\nexport { isObserverBatched, observerBatching } from \"./observerBatching\"\n"],"names":["useState","Error","spy","useForceUpdate","setTick","update","useCallback","tick","isPlainObject","value","proto","Object","getPrototypeOf","prototype","getSymbol","name","Symbol","for","mockGlobal","getGlobal","window","global","self","observerBatchingConfiguredSymbol","defaultNoopBatch","callback","observerBatching","reactionScheduler","console","warn","configure","isObserverBatched","globalIsUsingStaticRendering","useStaticRendering","enable","isUsingStaticRendering","printDebugValue","v","getDependencyTree","createTrackingData","reaction","trackingData","cleanAt","Date","now","CLEANUP_LEAKED_REACTIONS_AFTER_MILLIS","CLEANUP_TIMER_LOOP_MILLIS","uncommittedReactionRefs","Set","reactionCleanupHandle","ensureCleanupTimerRunning","undefined","setTimeout","cleanUncommittedReactions","scheduleCleanupOfReactionIfLeaked","ref","add","recordReactionAsCommitted","reactionRef","delete","forEach","tracking","current","dispose","size","insideRender","forceUpdateQueue","useQueuedForceUpdate","forceUpdate","push","useQueuedForceUpdateBlock","result","queue","length","React","useLayoutEffect","x","EMPTY_OBJECT","observerComponentNameFor","baseComponentName","useObserver","fn","options","wantedForceUpdateHook","queuedForceUpdate","reactionTrackingRef","useRef","newReaction","Reaction","mounted","useDebugValue","useEffect","Infinity","rendering","exception","track","e","observer","baseComponent","realOptions","forwardRef","displayName","wrappedComponent","props","memoComponent","memo","copyStaticProperties","hoistBlackList","$$typeof","render","compare","type","base","target","keys","key","defineProperty","getOwnPropertyDescriptor","ObserverComponent","children","component","propTypes","ObserverPropsCheck","componentName","location","propFullName","extraKey","hasProp","hasExtraProp","useAsObservableSourceInternal","usedByLocalStore","culprit","initialSource","observable","deep","res","runInAction","assign","useAsObservableSource","useLocalStore","initializer","source","local","wrapInTransaction","context","args","transaction","apply","batch"],"mappings":"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"}